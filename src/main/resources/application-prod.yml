spring:
  application:
    name: studyLog

  #registration
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao         # 서비스명
            client-id: ${KAKAO_CLIENT_ID}           #서비스에서 발급 받은 아이디(from kakao)
            client-secret: ${KAKAO_CLIENT_SECRET}       #서비스에서 발급 받은 비밀번호(from kakao)
            redirect-uri: ${SERVER_URI}/login/oauth2/code/kakao       #서비스에 등록한 우리쪽 로그인 성공 URI
            authorization-grant-type: authorization_code    # code 방식 사용
            scope: profile_nickname, profile_image         # 리소스 서버에서 가져올 데이터 범위
            client-authentication-method: client_secret_post
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${SERVER_URI}/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile

        #provider(인증/리소스 서버 정보)
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize	      # 서비스 로그인 창 주소
            token-uri: https://kauth.kakao.com/oauth/token	             # 토큰 발급 서버 주소
            user-info-uri: https://kapi.kakao.com/v2/user/me	         # 사용자 정보 획득 주소
            user-name-attribute: id        # 응답 데이터 변수


  datasource:
    hikari:
      maximum-pool-size: 4
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  jwt:
    secret: ${JWT_SECRET_KEY}

  logging:
    level:
      org.springframework.security: DEBUG
      io.awspring.cloud.s3: DEBUG
      io.awspring.cloud.core: DEBUG
      org.example.studylog.controller: DEBUG

  servlet:
    multipart:
      max-file-size: 10MB     # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 10MB   # 한개 요청의 최대 사이즈 (default: 10MB)

  # AWS S3
  cloud:
    aws:
      credentials:
        access-key: ${S3_ACCESS_KEY}
        secret-key: ${S3_SECRET_KEY}
      region:
        static: ap-northeast-2  # 버킷의 리전
      s3:
        bucket: study-log-1
      stack:
        auto: true

  # ChatGPT
  openai:
    api-key: ${GPT_API_KEY}